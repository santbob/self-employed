{"version":3,"sources":["utils/index.js","actions/types.js","components/BankTransactionForm.js","components/BankTransactions.js","actions/index.js","components/FinancialSummary.js","components/InvoiceForm.js","components/InvoicesList.js","pages/Home.js","pages/NotFound.js","components/Header.js","routes.js","App.js","serviceWorker.js","reducers/invoices.js","reducers/bankTxns.js","reducers/index.js","setupStore.js","testData/invoices.js","testData/bankTxns.js","testData/index.js","index.js"],"names":["randomString","length","Math","round","pow","random","toString","slice","printDate","timestamp","Date","toUTCString","split","join","getRandomInt","min","max","ceil","floor","printAmount","amount","symbol","prefix","abs","toFixed","ADD_INVOICE","EDIT_INVOICE","DELETE_INVOICE","ADD_BANK_TXN","EDIT_BANK_TXN","BankTransactionForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","description","invoiceId","onFormSubmit","bind","assertThisInitialized","onCancel","handleInputChange","event","preventDefault","onSubmit","_this$state","onClose","invoices","target","value","type","checked","name","update","defineProperty","selectedIndex","setState","_this$state2","react_default","a","createElement","className","placeholder","onChange","key","map","inv","id","clientName","step","onClick","Component","BankTransactions","isModalOpen","onAddTxn","txn","addBankTxn","closeTxnModal","openTxnModal","ReactModal","setAppElement","_this$props","bankTxns","clz","Utils","created","lib_default","overlayClassName","isOpen","onRequestClose","contentLabel","components_BankTransactionForm","connect","_ref","ACTION","FinancialSummary","balance","reduce","accumulator","epochNDaysBack","days","d","setHours","setMinutes","setSeconds","setDate","getDate","getTime","invoicesCount","count","thresh_clz","InvoiceForm","_this$props$invoice","invoice","_this$props$invoice$c","now","InvoicesList","selectedInvoice","handleInvoiceEdit","tr","parentElement","tagName","openInvoiceModal","rowIndex","onAddInvoice","addInvoice","updateInvoice","closeInvoiceModal","_this$props2","paidInvoicesMap","forEach","components_InvoiceForm","Home","components_FinancialSummary","components_BankTransactions","components_InvoicesList","NotFound","Header","role","aria-label","href","src","alt","width","height","routes","components_Header","react_router","exact","path","component","App","history","esm","Boolean","window","location","hostname","match","invoicesReducer","arguments","undefined","action","parseInt","status","concat","toConsumableArray","objectSpread","updated","filter","bankTxnsReducer","t","rootReducer","combineReducers","router","connectRouter","createBrowserHistory","names","invoicesTestDataHelper","result","i","push","sort","b","bankTxnsTestDataHelper","getHours","generateTestData","store","preloadedState","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","routerMiddleware","setupStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd077049.chunk.js","sourcesContent":["export function randomString(length) {\n  return Math.round(\n    Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)\n  )\n    .toString(36)\n    .slice(1);\n}\n\nexport function printDate(timestamp) {\n  const d = new Date(timestamp);\n  return d\n    .toUTCString()\n    .split(' ')\n    .slice(1, 4)\n    .join('/');\n}\n\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nexport function printAmount(amount, symbol) {\n  const prefix = symbol || '$';\n  amount = amount / 100;\n  if (amount < 0) {\n    return '-' + prefix + Math.abs(amount).toFixed(2);\n  }\n  return prefix + amount.toFixed(2);\n}\n\nexport function getDateNDaysFromToday(days) {\n  const d = new Date();\n  d.setHours(0);\n  d.setMinutes(0);\n  d.setSeconds(0);\n  d.setDate(d.getDate() - days);\n  return d;\n}\n","//invoice actions\nexport const ADD_INVOICE = 'ADD_INVOICE';\nexport const EDIT_INVOICE = 'EDIT_INVOICE';\nexport const DELETE_INVOICE = 'DELETE_INVOICE';\nexport const LIST_INVOICES = 'LIST_INVOICES';\n\n//bank transaction actions\nexport const ADD_BANK_TXN = 'ADD_BANK_TXN';\nexport const EDIT_BANK_TXN = 'EDIT_BANK_TXN';\nexport const LIST_BANK_TXNS = 'LIST_BANK_TXNS';\n","import React, { Component } from 'react';\n\nclass BankTransactionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  state = {\n    description: '',\n    invoiceId: '',\n    amount: 0\n  };\n\n  onFormSubmit(event) {\n    event.preventDefault();\n    const { onSubmit } = this.props;\n    const { description, invoiceId, amount } = this.state;\n\n    if (onSubmit && description && invoiceId && amount) {\n      onSubmit({\n        description,\n        invoiceId,\n        amount: amount * 100\n      });\n    }\n  }\n\n  onCancel(event) {\n    event.preventDefault();\n    const { onClose } = this.props;\n    if (onClose) {\n      onClose();\n    }\n  }\n\n  handleInputChange(event) {\n    const { invoices } = this.props;\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    const update = {\n      [name]: value\n    };\n    if (name === 'invoiceId') {\n      update.amount = invoices[target.selectedIndex - 1].amount / 100;\n    }\n    this.setState(update);\n  }\n\n  render() {\n    const { invoices } = this.props;\n    const { description, invoiceId, amount } = this.state;\n\n    return (\n      <form onSubmit={this.onFormSubmit} className='section'>\n        <h3 className='title is-3'>Add a bank transaction</h3>\n        <div className='field'>\n          <label className='label'>Description</label>\n          <div className='control'>\n            <input\n              name='description'\n              className='input'\n              type='text'\n              placeholder='e.g Payment for work'\n              value={description}\n              onChange={this.handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='field'>\n          <label className='label'>Invoice</label>\n          <div className='control'>\n            <div className='select'>\n              <select\n                value={invoiceId}\n                onChange={this.handleInputChange}\n                name='invoiceId'\n              >\n                <option key=''>Select a client</option>\n                {invoices &&\n                  invoices.map(inv => (\n                    <option key={inv.id} value={inv.id}>\n                      {inv.clientName}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className='field'>\n          <label className='label'>Amount</label>\n          <div className='control'>\n            <input\n              name='amount'\n              className='input'\n              type='number'\n              placeholder='100.50'\n              value={amount}\n              step='0.50'\n              onChange={this.handleInputChange}\n            />\n          </div>\n        </div>\n\n        <div className='field is-grouped is-grouped-centered'>\n          <p className='control'>\n            <button className='button is-success' type='submit'>\n              Submit\n            </button>\n          </p>\n          <p className='control'>\n            <button className='button is-black' onClick={this.onCancel}>\n              Cancel\n            </button>\n          </p>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default BankTransactionForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Utils from '../utils';\nimport ReactModal from 'react-modal';\n\nimport { addBankTxn } from '../actions';\nimport BankTransactionForm from './BankTransactionForm';\n\nclass BankTransactions extends Component {\n  constructor(props) {\n    super(props);\n    this.openTxnModal = this.openTxnModal.bind(this);\n    this.closeTxnModal = this.closeTxnModal.bind(this);\n    ReactModal.setAppElement('#root');\n  }\n\n  state = {\n    isModalOpen: false\n  };\n\n  openTxnModal() {\n    this.setState({ isModalOpen: true });\n  }\n\n  closeTxnModal() {\n    this.setState({ isModalOpen: false });\n  }\n\n  onAddTxn = txn => {\n    const { addBankTxn } = this.props;\n    addBankTxn(txn);\n    this.closeTxnModal();\n  };\n\n  render() {\n    const { bankTxns, clz, invoices } = this.props;\n    const { isModalOpen } = this.state;\n    return (\n      <div className={clz}>\n        <header className='has-background-success'>\n          <h4 className='title is-4 has-text-white is-clearfix'>\n            Bank Transactions\n            <span\n              className='button is-primary is-inverted is-pulled-right is-outlined'\n              onClick={this.openTxnModal}\n            >\n              Add a Bank Transaction\n            </span>\n          </h4>\n        </header>\n        <table className='table is-striped is-fullwidth'>\n          <thead className='has-background-success'>\n            <tr>\n              <th className='has-text-white'>Date</th>\n              <th className='has-text-white'>Invoice Id</th>\n              <th className='has-text-white'>Description</th>\n              <th className='has-text-white'>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            {bankTxns.map(txn => (\n              <tr key={txn.id}>\n                <td>{Utils.printDate(txn.created)}</td>\n                <td>{txn.invoiceId}</td>\n                <td>{txn.description}</td>\n                <td className='has-text-right'>\n                  {Utils.printAmount(txn.amount)}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <ReactModal\n          className='Modal'\n          overlayClassName='Overlay'\n          isOpen={isModalOpen}\n          onRequestClose={this.closeTxnModal}\n          contentLabel='Modal'\n        >\n          {isModalOpen && (\n            <BankTransactionForm\n              invoices={invoices}\n              onSubmit={this.onAddTxn}\n              onClose={this.closeTxnModal}\n            />\n          )}\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ bankTxns, invoices }) {\n  return { bankTxns, invoices };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addBankTxn }\n)(BankTransactions);\n","import * as ACTION from './types';\n\n// Note - move related actions into its own file, if its becomes complex\n// invoices related actions\nexport function addInvoice(invoice) {\n  return { type: ACTION.ADD_INVOICE, invoice };\n}\n\nexport function updateInvoice(invoice) {\n  return { type: ACTION.EDIT_INVOICE, invoice };\n}\n\nexport function deleteInvoice(invoice) {\n  return { type: ACTION.DELETE_INVOICE, invoice };\n}\n\nexport function loadInvoices() {\n  return { type: ACTION.LIST_INVOICES };\n}\n\n// Bank txn related actions\nexport function addBankTxn(txn) {\n  return { type: ACTION.ADD_BANK_TXN, txn };\n}\n\nexport function updateBankTxn(txn) {\n  return { type: ACTION.EDIT_BANK_TXN, txn };\n}\n\nexport function loadBankTransactions() {\n  return { type: ACTION.LIST_BANK_TXNS };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Utils from '../utils';\n\nconst N_DAYS = 30;\nconst BALANCE_THRESHOLD = 100;\nclass FinancialSummary extends Component {\n  componentDidMount() {}\n  render() {\n    const { invoices, bankTxns } = this.props;\n\n    //calculate the bank balance\n    const balance = bankTxns.reduce((accumulator, txn) => {\n      return accumulator + txn.amount;\n    }, 0);\n\n    //calculate the total invoices created within the last 30days.\n    const epochNDaysBack = Utils.getDateNDaysFromToday(N_DAYS).getTime();\n    const invoicesCount = invoices.reduce((count, inv) => {\n      if (inv.created > epochNDaysBack) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n\n    // Balance Threshold class\n    const thresh_clz =\n      balance > BALANCE_THRESHOLD\n        ? 'is-success'\n        : balance < 0\n        ? 'is-danger'\n        : 'is-warning';\n\n    return (\n      <div className='tile'>\n        <div className='tile is-parent'>\n          <article className={'tile is-child notification ' + thresh_clz}>\n            <p className='title'>{Utils.printAmount(balance)}</p>\n            <p className='subtitle'>Bank balance</p>\n          </article>\n        </div>\n        <div className='tile is-parent'>\n          <article className='tile is-child notification is-info'>\n            <p className='title'>{invoicesCount}</p>\n            <p className='subtitle'>Invoices (Last 30days)</p>\n          </article>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ invoices, bankTxns }) {\n  return { invoices, bankTxns };\n}\n\nexport default connect(mapStateToProps)(FinancialSummary);\n","import React, { Component } from 'react';\nimport * as Utils from '../utils';\n\nclass InvoiceForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  state = {\n    clientName: '',\n    amount: 0,\n    id: '',\n    created: 0\n  };\n\n  componentDidMount() {\n    let { clientName, amount, created = Date.now(), id } = this.props.invoice;\n    amount = amount / 100;\n    this.setState({ clientName, amount, id, created });\n  }\n\n  onFormSubmit(event) {\n    event.preventDefault();\n    const { onSubmit } = this.props;\n    const { clientName, amount, id, created } = this.state;\n\n    if (onSubmit && clientName && amount) {\n      onSubmit({\n        id,\n        created,\n        clientName,\n        amount: amount * 100 // convert to cents\n      });\n    }\n  }\n\n  onCancel(event) {\n    event.preventDefault();\n    const { onClose } = this.props;\n    if (onClose) {\n      onClose();\n    }\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const { clientName, amount, created, id } = this.state;\n    return (\n      <form onSubmit={this.onFormSubmit} className='section'>\n        <h3 className='title is-3'>\n          {id ? 'Edit the Invoice' : 'Add an Invoice'}\n        </h3>\n        <div className='field'>\n          <label className='label'>Invoice Date</label>\n          <div className='control'>{Utils.printDate(created)}</div>\n        </div>\n        <div className='field'>\n          <label className='label'>Client Name</label>\n          <div className='control'>\n            <input\n              name='clientName'\n              className='input'\n              type='text'\n              placeholder='e.g John Doe'\n              value={clientName}\n              onChange={this.handleInputChange}\n            />\n          </div>\n        </div>\n        <div className='field'>\n          <label className='label'>Amount</label>\n          <div className='control'>\n            <input\n              name='amount'\n              className='input'\n              type='number'\n              placeholder='100.50'\n              value={amount}\n              onChange={this.handleInputChange}\n            />\n          </div>\n        </div>\n\n        <div className='field is-grouped is-grouped-centered'>\n          <p className='control'>\n            <button className='button is-success' type='submit'>\n              {id ? 'Edit Invoice' : 'Add Invoice'}\n            </button>\n          </p>\n          <p className='control'>\n            <button className='button is-black' onClick={this.onCancel}>\n              Cancel\n            </button>\n          </p>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default InvoiceForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Utils from '../utils';\nimport ReactModal from 'react-modal';\nimport InvoiceForm from './InvoiceForm';\nimport { addInvoice, updateInvoice } from '../actions';\n\nclass InvoicesList extends Component {\n  constructor(props) {\n    super(props);\n    this.openInvoiceModal = this.openInvoiceModal.bind(this);\n    this.closeInvoiceModal = this.closeInvoiceModal.bind(this);\n    ReactModal.setAppElement('#root');\n  }\n\n  state = {\n    isModalOpen: false,\n    selectedInvoice: null\n  };\n\n  handleInvoiceEdit = event => {\n    const tr = event.target.parentElement;\n    const { invoices } = this.props;\n    if (tr && tr.tagName === 'TR' && tr.id) {\n      this.openInvoiceModal(invoices[tr.rowIndex - 1]);\n    }\n  };\n  openInvoiceModal(inv) {\n    this.setState({ isModalOpen: true, selectedInvoice: inv });\n  }\n\n  closeInvoiceModal() {\n    this.setState({ isModalOpen: false, selectedInvoice: null });\n  }\n\n  onAddInvoice = inv => {\n    const { addInvoice, updateInvoice } = this.props;\n    if (inv && inv.id) {\n      updateInvoice(inv);\n    } else {\n      addInvoice(inv);\n    }\n    this.closeInvoiceModal();\n  };\n\n  render() {\n    const { invoices, bankTxns, clz } = this.props;\n    const { isModalOpen, selectedInvoice } = this.state;\n\n    const paidInvoicesMap = {};\n    bankTxns.forEach(txn => {\n      if (!paidInvoicesMap[txn.invoiceId]) {\n        paidInvoicesMap[txn.invoiceId] = txn.amount;\n      } else {\n        paidInvoicesMap[txn.invoiceId] += txn.amount;\n      }\n    });\n\n    return (\n      <div className={clz}>\n        <header className='has-background-success'>\n          <h4 className='title is-4 has-text-white is-clearfix'>\n            Invoices\n            <span\n              className='button is-primary is-inverted is-pulled-right is-outlined'\n              onClick={this.openInvoiceModal}\n            >\n              Add an Invoice\n            </span>\n          </h4>\n        </header>\n        <table className='table is-fullwidth is-striped'>\n          <thead className='has-background-success'>\n            <tr>\n              <th className='has-text-white'>Date</th>\n              <th className='has-text-white'>Id</th>\n              <th className='has-text-white'>Client Name</th>\n              <th className='has-text-white'>Amount</th>\n              <th className='has-text-white has-text-centered'>Status</th>\n            </tr>\n          </thead>\n          <tbody onClick={this.handleInvoiceEdit}>\n            {invoices.map(inv => (\n              <tr key={inv.id} id={inv.id}>\n                <td>{Utils.printDate(inv.created)}</td>\n                <td>{inv.id}</td>\n                <td>{inv.clientName}</td>\n                <td className='has-text-right'>\n                  {Utils.printAmount(inv.amount)}\n                </td>\n                <td className='has-text-centered'>\n                  {inv.amount === paidInvoicesMap[inv.id] ? 'PAID' : 'NOT PAID'}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <ReactModal\n          className='Modal'\n          overlayClassName='Overlay'\n          isOpen={isModalOpen}\n          onRequestClose={this.closeInvoiceModal}\n          contentLabel='Modal'\n        >\n          {isModalOpen && (\n            <InvoiceForm\n              invoice={selectedInvoice}\n              onSubmit={this.onAddInvoice}\n              onClose={this.closeInvoiceModal}\n            />\n          )}\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ invoices, bankTxns }) {\n  return { invoices, bankTxns };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addInvoice, updateInvoice }\n)(InvoicesList);\n","import React from 'react';\n\nimport BankTransactions from '../components/BankTransactions';\nimport FinancialSummary from '../components/FinancialSummary';\nimport InvoicesList from '../components/InvoicesList';\n\nconst Home = () => (\n  <div className='container'>\n    <section className='section'>\n      <FinancialSummary />\n    </section>\n\n    <section className='columns'>\n      <BankTransactions clz='widget column is-half' />\n      <InvoicesList clz='widget column is-half' />\n    </section>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst NotFound = () => <div>404</div>;\n\nexport default NotFound;\n","import React from 'react';\n\nconst Header = () => (\n  <nav\n    className='navbar is-success'\n    role='navigation'\n    aria-label='main navigation'\n  >\n    <div className='navbar-brand'>\n      <a className='navbar-item' href='/'>\n        <img\n          src='/self-employed-logo.png'\n          alt='Self Employed - A Financial App'\n          width='50'\n          height='50'\n        />\n        <p className='title is-4'>Self Employed</p>\n      </a>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport Header from './components/Header';\nconst routes = (\n  <div>\n    <Header />\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  </div>\n);\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ConnectedRouter } from 'connected-react-router';\nimport routes from './routes';\n\nconst App = ({ history }) => {\n  return <ConnectedRouter history={history}>{routes}</ConnectedRouter>;\n};\n\nApp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ACTION from '../actions/types';\nimport * as Utils from '../utils';\n\nconst invoicesReducer = (state = [], action) => {\n  const { invoice } = action;\n  switch (action.type) {\n    case ACTION.ADD_INVOICE:\n      return [\n        {\n          id: Utils.randomString(16),\n          clientName: invoice.clientName,\n          created: Date.now(),\n          amount: parseInt(invoice.amount, 10),\n          status: 0\n        },\n        ...state\n      ];\n    case ACTION.EDIT_INVOICE:\n      return state.map(inv => {\n        return inv.id === invoice.id\n          ? { ...invoice }\n          : { ...inv, updated: Date.now() };\n      });\n    case ACTION.DELETE_INVOICE:\n      return state.filter(inv => {\n        return inv.id !== invoice.id;\n      });\n    default:\n      return state;\n  }\n};\n\nexport default invoicesReducer;\n","import * as ACTION from '../actions/types';\nimport * as Utils from '../utils';\n\nconst bankTxnsReducer = (state = [], action) => {\n  const { txn } = action;\n  switch (action.type) {\n    case ACTION.ADD_BANK_TXN:\n      return [\n        {\n          id: Utils.randomString(16),\n          description: txn.description,\n          invoiceId: txn.invoiceId,\n          created: Date.now(),\n          amount: parseInt(txn.amount, 10)\n        },\n        ...state\n      ];\n    case ACTION.EDIT_BANK_TXN:\n      return state.map(t => {\n        return t.id === txn.id ? { ...txn } : t;\n      });\n    // case ACTION.DELETE_TXN:\n    //   return state.filter(t => {\n    //     return t.id !== txn.id;\n    //   });\n    default:\n      return state;\n  }\n};\n\nexport default bankTxnsReducer;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport invoicesReducer from './invoices';\nimport bankTxnsReducer from './bankTxns';\n\nconst rootReducer = history =>\n  combineReducers({\n    invoices: invoicesReducer,\n    bankTxns: bankTxnsReducer,\n    router: connectRouter(history)\n  });\n\nexport default rootReducer;\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './reducers';\n\nexport const history = createBrowserHistory();\n\nexport default function setupStore(preloadedState) {\n  const composeEnhancer =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeEnhancer(applyMiddleware(routerMiddleware(history)))\n  );\n\n  // Hot reloading\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(createRootReducer(history));\n    });\n  }\n\n  return store;\n}\n","import * as Utils from '../utils';\nvar names = [\n  'Estell Rockhill',\n  'Eliz Wahlstrom',\n  'Nadia Kierstead',\n  'Brittny Bowersox',\n  'Keli Sobotka',\n  'Otha Eves',\n  'Orpha Kinsel',\n  'Aurora Sprinkle',\n  'Stewart Slavin',\n  'Jolie Garrison',\n  'Twila Reames',\n  'Billie Mikus',\n  'Peter Brunt',\n  'Marcell Luzier',\n  'Brad Becher',\n  'Dawn Siqueiros',\n  'Felton Esperanza',\n  'Larissa Riddles',\n  'Lavone Ton',\n  'Hiram Netzer'\n];\n\nconst invoicesTestDataHelper = function() {\n  var result = [];\n  for (let i = 0; i < names.length; i++) {\n    var inv = {\n      id: Utils.randomString(16),\n      clientName: names[i],\n      amount: Utils.getRandomInt(-5000, 10000),\n      status: 0\n    };\n    //\n    var d = new Date();\n    d.setDate(d.getDate() - Utils.getRandomInt(0, 40));\n    inv.created = d.getTime();\n    result.push(inv);\n  }\n  // sort by date in descending order\n  return result.sort((a, b) => (a.created < b.created ? 1 : -1));\n};\n\nexport default invoicesTestDataHelper;\n","import * as Utils from '../utils';\n\nconst bankTxnsTestDataHelper = function(invoices) {\n  var result = [];\n  for (let i = 0; i < invoices.length - 5; i++) {\n    const inv = invoices[i];\n    var txn = {\n      id: Utils.randomString(16),\n      description:\n        inv.amount >= 0\n          ? `Invoice payment by ${inv.clientName}`\n          : `Refund to ${inv.clientName}`,\n      invoiceId: inv.id,\n      amount: inv.amount\n    };\n\n    var d = new Date(inv.created);\n    d.setHours(d.getHours() + Utils.getRandomInt(1, 2));\n    txn.created = d.getTime();\n    result.push(txn);\n  }\n  // sort by date in descending order\n  return result.sort((a, b) => (a.created < b.created ? 1 : -1));\n};\n\nexport default bankTxnsTestDataHelper;\n","import invoicesTestDataHelper from './invoices';\nimport bankTxnsTestDataHelper from './bankTxns';\n\nconst generateTestData = function() {\n  const invoices = invoicesTestDataHelper();\n  const bankTxns = bankTxnsTestDataHelper(invoices);\n  return {\n    invoices,\n    bankTxns\n  };\n};\n\nexport default generateTestData;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport setupStore, { history } from './setupStore';\nimport generateTestData from './testData';\nimport './index.css';\nlet launchData = [];\n\n// comment this line to not load test data.\nlaunchData = generateTestData();\n//console.log(launchData);\n//creates the redux store with all routers connected\nconst store = setupStore(launchData);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}